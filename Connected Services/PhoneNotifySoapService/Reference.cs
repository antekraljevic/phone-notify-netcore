//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhoneNotifySoapService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", ConfigurationName="PhoneNotifySoapService.PhoneNotifySoap")]
    public interface PhoneNotifySoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ReturnSoundFileIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> ReturnSoundFileIDsAsync(string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RemoveSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> RemoveSoundFileAsync(string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RenameSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> RenameSoundFileAsync(string SoundFileID, string NewSoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/UploadSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.UploadSoundFileResponse> UploadSoundFileAsync(PhoneNotifySoapService.UploadSoundFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileLength", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetSoundFileLengthAsync(string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileResponse> GetSoundFileAsync(PhoneNotifySoapService.GetSoundFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetTTSInULAW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInULAWResponse> GetTTSInULAWAsync(PhoneNotifySoapService.GetTTSInULAWRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetTTSInMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInMP3Response> GetTTSInMP3Async(PhoneNotifySoapService.GetTTSInMP3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileInMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInMP3Response> GetSoundFileInMP3Async(PhoneNotifySoapService.GetSoundFileInMP3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSoundFileURLAsync(string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileInUlaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInUlawResponse> GetSoundFileInUlawAsync(PhoneNotifySoapService.GetSoundFileInUlawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RecordSoundViaPhoneCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> RecordSoundViaPhoneCallAsync(string PhoneNumberToDial, string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> GetQueueIDStatusAsync(long QueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusesByPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> GetQueueIDStatusesByPhoneNumberAsync(string PhoneNumber, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusWithAdvancedInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> GetQueueIDStatusWithAdvancedInfoAsync(long QueueID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneEnglishBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneEnglishBasicAsync(string PhoneNumberToDial, string TextToSay, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicWithTransferAsync(string PhoneNumberToDial, string TransferNumber, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetMultipleQueueIdStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> GetMultipleQueueIdStatusAsync(string QueueIDs, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicAsync(string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTryCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicWithTryCountAsync(short TryCount, string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneAdvancedAsync(PhoneNotifySoapService.AdvancedNotifyRequest anr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicWithCPMAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPMandReferenceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicWithCPMandReferenceIDAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string ReferenceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneAdvancedAsync(PhoneNotifySoapService.AdvancedNotifyRequest[] MultipleANR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelConference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task CancelConferenceAsync(string ConferenceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CancelNotifyAsync(long QueueID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelNotifyByReferenceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CancelNotifyByReferenceIDAsync(string ReferenceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> ScriptListAsync(bool IncludeGlobalScripts, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ScriptSaveAsync(string ScriptName, string ScriptText, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ScriptDeleteAsync(string ScriptName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ScriptLoadAsync(string ScriptName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LicenseKeyVariableLoadAsync(string VariableName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LicenseKeyVariableSaveAsync(string VariableName, string VariableValue, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_GetListIDsByLicensekey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListIDsByLicensekeyResponse> LM_GetListIDsByLicensekeyAsync(PhoneNotifySoapService.LM_GetListIDsByLicensekeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_GetListMembersByListID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListMembersByListIDResponse> LM_GetListMembersByListIDAsync(PhoneNotifySoapService.LM_GetListMembersByListIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DialList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_DialReturn> LM_DialListAsync(int ListID, bool DialRecursiveLists, string CallerID, string CallerIDName, byte VoiceID, string TextToSay, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DialListAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_DialReturn> LM_DialListAdvancedAsync(PhoneNotifySoapService.LM_Functions lmFunctions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AddNewList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> LM_AddNewListAsync(string ListName, int ParentListID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AddListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> LM_AddListMemberAsync(int ListID, string LicenseKey, string PhoneNumber, string ClientID, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DeleteList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LM_DeleteListAsync(int ListID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DeleteListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LM_DeleteListMemberAsync(int ListMemberID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AlterListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LM_AlterListMemberAsync(int ListMemberID, string licensekey, string ClientID, string FirstName, string LastName, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AlterListID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LM_AlterListIDAsync(int ListID, int ParentListID, string ListName, string Licensekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetResponseCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.Response[]> GetResponseCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAvailableAreaCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.AreaCode[]> GetAvailableAreaCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAvailableIncomingNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> GetAvailableIncomingNumbersAsync(string AreaCodeFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAssignedNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> GetAssignedNumbersAsync(string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/getVoices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.Voice[]> getVoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/AssignIncomingNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> AssignIncomingNumberAsync(string IncomingPhoneNumber, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/SetIncomingCallScript", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SetIncomingCallScriptAsync(string PhoneNumber, string Script, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetIncomingCallScript", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetIncomingCallScriptAsync(string PhoneNumber, string LicenseKey);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class UploadFileResponse
    {
        
        private bool uploadSuccessfulField;
        
        private string errorResponseField;
        
        private int uploadedLengthInSecondsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool UploadSuccessful
        {
            get
            {
                return this.uploadSuccessfulField;
            }
            set
            {
                this.uploadSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorResponse
        {
            get
            {
                return this.errorResponseField;
            }
            set
            {
                this.errorResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int UploadedLengthInSeconds
        {
            get
            {
                return this.uploadedLengthInSecondsField;
            }
            set
            {
                this.uploadedLengthInSecondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Voice
    {
        
        private int voiceIDField;
        
        private string voiceNameField;
        
        private string voiceGenderField;
        
        private int voiceAgeField;
        
        private string voiceLanguageField;
        
        private string voiceSummaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int VoiceID
        {
            get
            {
                return this.voiceIDField;
            }
            set
            {
                this.voiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VoiceName
        {
            get
            {
                return this.voiceNameField;
            }
            set
            {
                this.voiceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string VoiceGender
        {
            get
            {
                return this.voiceGenderField;
            }
            set
            {
                this.voiceGenderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int VoiceAge
        {
            get
            {
                return this.voiceAgeField;
            }
            set
            {
                this.voiceAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VoiceLanguage
        {
            get
            {
                return this.voiceLanguageField;
            }
            set
            {
                this.voiceLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string VoiceSummary
        {
            get
            {
                return this.voiceSummaryField;
            }
            set
            {
                this.voiceSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class AreaCode
    {
        
        private string areaCodeNumberField;
        
        private string locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AreaCodeNumber
        {
            get
            {
                return this.areaCodeNumberField;
            }
            set
            {
                this.areaCodeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Response
    {
        
        private int responseCodeField;
        
        private string responseTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResponseCode
        {
            get
            {
                return this.responseCodeField;
            }
            set
            {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseText
        {
            get
            {
                return this.responseTextField;
            }
            set
            {
                this.responseTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_Functions
    {
        
        private string callerIDField;
        
        private string callerIDNameField;
        
        private byte voiceIDField;
        
        private string textToSayField;
        
        private byte tryCountField;
        
        private string licensekeyField;
        
        private string extensionField;
        
        private string transferNumberField;
        
        private short nextTryInSecondsField;
        
        private byte tTSRateField;
        
        private byte tTSVolumeField;
        
        private System.DateTime scheduledUTCDatetimeField;
        
        private int listIDField;
        
        private bool dialRecursiveListsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CallerID
        {
            get
            {
                return this.callerIDField;
            }
            set
            {
                this.callerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CallerIDName
        {
            get
            {
                return this.callerIDNameField;
            }
            set
            {
                this.callerIDNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public byte VoiceID
        {
            get
            {
                return this.voiceIDField;
            }
            set
            {
                this.voiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TextToSay
        {
            get
            {
                return this.textToSayField;
            }
            set
            {
                this.textToSayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public byte TryCount
        {
            get
            {
                return this.tryCountField;
            }
            set
            {
                this.tryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Licensekey
        {
            get
            {
                return this.licensekeyField;
            }
            set
            {
                this.licensekeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Extension
        {
            get
            {
                return this.extensionField;
            }
            set
            {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TransferNumber
        {
            get
            {
                return this.transferNumberField;
            }
            set
            {
                this.transferNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public short NextTryInSeconds
        {
            get
            {
                return this.nextTryInSecondsField;
            }
            set
            {
                this.nextTryInSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public byte TTSRate
        {
            get
            {
                return this.tTSRateField;
            }
            set
            {
                this.tTSRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public byte TTSVolume
        {
            get
            {
                return this.tTSVolumeField;
            }
            set
            {
                this.tTSVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime ScheduledUTCDatetime
        {
            get
            {
                return this.scheduledUTCDatetimeField;
            }
            set
            {
                this.scheduledUTCDatetimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int ListID
        {
            get
            {
                return this.listIDField;
            }
            set
            {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool DialRecursiveLists
        {
            get
            {
                return this.dialRecursiveListsField;
            }
            set
            {
                this.dialRecursiveListsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_DialReturn
    {
        
        private bool successField;
        
        private int batchIDField;
        
        private int responseCodeField;
        
        private string errorTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int BatchID
        {
            get
            {
                return this.batchIDField;
            }
            set
            {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ResponseCode
        {
            get
            {
                return this.responseCodeField;
            }
            set
            {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ErrorText
        {
            get
            {
                return this.errorTextField;
            }
            set
            {
                this.errorTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_ListMembers
    {
        
        private int listMemberIDField;
        
        private string phoneNumberField;
        
        private string clientIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ListMemberID
        {
            get
            {
                return this.listMemberIDField;
            }
            set
            {
                this.listMemberIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhoneNumber
        {
            get
            {
                return this.phoneNumberField;
            }
            set
            {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ClientID
        {
            get
            {
                return this.clientIDField;
            }
            set
            {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FirstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_ListIDs
    {
        
        private int listIDField;
        
        private int parentListIDField;
        
        private string listNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ListID
        {
            get
            {
                return this.listIDField;
            }
            set
            {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ParentListID
        {
            get
            {
                return this.parentListIDField;
            }
            set
            {
                this.parentListIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ListName
        {
            get
            {
                return this.listNameField;
            }
            set
            {
                this.listNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class AdvancedNotifyRequest
    {
        
        private string phoneNumberToDialField;
        
        private string transferNumberField;
        
        private int voiceIDField;
        
        private string callerIDNumberField;
        
        private string callerIDNameField;
        
        private string textToSayField;
        
        private string licenseKeyField;
        
        private int tryCountField;
        
        private int nextTryInSecondsField;
        
        private System.DateTime uTCScheduledDateTimeField;
        
        private byte tTSrateField;
        
        private byte tTSvolumeField;
        
        private int maxCallLengthField;
        
        private string statusChangePostUrlField;
        
        private string referenceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PhoneNumberToDial
        {
            get
            {
                return this.phoneNumberToDialField;
            }
            set
            {
                this.phoneNumberToDialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransferNumber
        {
            get
            {
                return this.transferNumberField;
            }
            set
            {
                this.transferNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int VoiceID
        {
            get
            {
                return this.voiceIDField;
            }
            set
            {
                this.voiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CallerIDNumber
        {
            get
            {
                return this.callerIDNumberField;
            }
            set
            {
                this.callerIDNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CallerIDName
        {
            get
            {
                return this.callerIDNameField;
            }
            set
            {
                this.callerIDNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TextToSay
        {
            get
            {
                return this.textToSayField;
            }
            set
            {
                this.textToSayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string LicenseKey
        {
            get
            {
                return this.licenseKeyField;
            }
            set
            {
                this.licenseKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TryCount
        {
            get
            {
                return this.tryCountField;
            }
            set
            {
                this.tryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int NextTryInSeconds
        {
            get
            {
                return this.nextTryInSecondsField;
            }
            set
            {
                this.nextTryInSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime UTCScheduledDateTime
        {
            get
            {
                return this.uTCScheduledDateTimeField;
            }
            set
            {
                this.uTCScheduledDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public byte TTSrate
        {
            get
            {
                return this.tTSrateField;
            }
            set
            {
                this.tTSrateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public byte TTSvolume
        {
            get
            {
                return this.tTSvolumeField;
            }
            set
            {
                this.tTSvolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int MaxCallLength
        {
            get
            {
                return this.maxCallLengthField;
            }
            set
            {
                this.maxCallLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string StatusChangePostUrl
        {
            get
            {
                return this.statusChangePostUrlField;
            }
            set
            {
                this.statusChangePostUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ReferenceID
        {
            get
            {
                return this.referenceIDField;
            }
            set
            {
                this.referenceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Variable
    {
        
        private string variableNameField;
        
        private string variableValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string VariableName
        {
            get
            {
                return this.variableNameField;
            }
            set
            {
                this.variableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VariableValue
        {
            get
            {
                return this.variableValueField;
            }
            set
            {
                this.variableValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class NotifyReturn
    {
        
        private int responseCodeField;
        
        private string responseTextField;
        
        private bool callAnsweredField;
        
        private long queueIDField;
        
        private int tryCountField;
        
        private bool demoField;
        
        private string digitsPressedField;
        
        private string machineDetectionField;
        
        private int durationField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private decimal minuteRateField;
        
        private string countryField;
        
        private bool callCompleteField;
        
        private string textToSayField;
        
        private Variable[] variableArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResponseCode
        {
            get
            {
                return this.responseCodeField;
            }
            set
            {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseText
        {
            get
            {
                return this.responseTextField;
            }
            set
            {
                this.responseTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CallAnswered
        {
            get
            {
                return this.callAnsweredField;
            }
            set
            {
                this.callAnsweredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long QueueID
        {
            get
            {
                return this.queueIDField;
            }
            set
            {
                this.queueIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TryCount
        {
            get
            {
                return this.tryCountField;
            }
            set
            {
                this.tryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool Demo
        {
            get
            {
                return this.demoField;
            }
            set
            {
                this.demoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DigitsPressed
        {
            get
            {
                return this.digitsPressedField;
            }
            set
            {
                this.digitsPressedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MachineDetection
        {
            get
            {
                return this.machineDetectionField;
            }
            set
            {
                this.machineDetectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int Duration
        {
            get
            {
                return this.durationField;
            }
            set
            {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime StartTime
        {
            get
            {
                return this.startTimeField;
            }
            set
            {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime EndTime
        {
            get
            {
                return this.endTimeField;
            }
            set
            {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public decimal MinuteRate
        {
            get
            {
                return this.minuteRateField;
            }
            set
            {
                this.minuteRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool CallComplete
        {
            get
            {
                return this.callCompleteField;
            }
            set
            {
                this.callCompleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string TextToSay
        {
            get
            {
                return this.textToSayField;
            }
            set
            {
                this.textToSayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=15)]
        public Variable[] VariableArray
        {
            get
            {
                return this.variableArrayField;
            }
            set
            {
                this.variableArrayField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadSoundFile", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class UploadSoundFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileBinary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public string LicenseKey;
        
        public UploadSoundFileRequest()
        {
        }
        
        public UploadSoundFileRequest(byte[] FileBinary, string SoundFileID, string LicenseKey)
        {
            this.FileBinary = FileBinary;
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadSoundFileResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class UploadSoundFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public PhoneNotifySoapService.UploadFileResponse UploadSoundFileResult;
        
        public UploadSoundFileResponse()
        {
        }
        
        public UploadSoundFileResponse(PhoneNotifySoapService.UploadFileResponse UploadSoundFileResult)
        {
            this.UploadSoundFileResult = UploadSoundFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFile", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string LicenseKey;
        
        public GetSoundFileRequest()
        {
        }
        
        public GetSoundFileRequest(string SoundFileID, string LicenseKey)
        {
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileResult;
        
        public GetSoundFileResponse()
        {
        }
        
        public GetSoundFileResponse(byte[] GetSoundFileResult)
        {
            this.GetSoundFileResult = GetSoundFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInULAW", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInULAWRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string TextToSay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int VoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public byte TTSrate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=3)]
        public byte TTSvolume;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=4)]
        public string LicenseKey;
        
        public GetTTSInULAWRequest()
        {
        }
        
        public GetTTSInULAWRequest(string TextToSay, int VoiceID, byte TTSrate, byte TTSvolume, string LicenseKey)
        {
            this.TextToSay = TextToSay;
            this.VoiceID = VoiceID;
            this.TTSrate = TTSrate;
            this.TTSvolume = TTSvolume;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInULAWResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInULAWResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTTSInULAWResult;
        
        public GetTTSInULAWResponse()
        {
        }
        
        public GetTTSInULAWResponse(byte[] GetTTSInULAWResult)
        {
            this.GetTTSInULAWResult = GetTTSInULAWResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInMP3", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInMP3Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string TextToSay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int VoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public int BitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=3)]
        public byte TTSrate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=4)]
        public byte TTSvolume;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=5)]
        public string LicenseKey;
        
        public GetTTSInMP3Request()
        {
        }
        
        public GetTTSInMP3Request(string TextToSay, int VoiceID, int BitRate, byte TTSrate, byte TTSvolume, string LicenseKey)
        {
            this.TextToSay = TextToSay;
            this.VoiceID = VoiceID;
            this.BitRate = BitRate;
            this.TTSrate = TTSrate;
            this.TTSvolume = TTSvolume;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInMP3Response", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInMP3Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTTSInMP3Result;
        
        public GetTTSInMP3Response()
        {
        }
        
        public GetTTSInMP3Response(byte[] GetTTSInMP3Result)
        {
            this.GetTTSInMP3Result = GetTTSInMP3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInMP3", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInMP3Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int BitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public string LicenseKey;
        
        public GetSoundFileInMP3Request()
        {
        }
        
        public GetSoundFileInMP3Request(string SoundFileID, int BitRate, string LicenseKey)
        {
            this.SoundFileID = SoundFileID;
            this.BitRate = BitRate;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInMP3Response", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInMP3Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileInMP3Result;
        
        public GetSoundFileInMP3Response()
        {
        }
        
        public GetSoundFileInMP3Response(byte[] GetSoundFileInMP3Result)
        {
            this.GetSoundFileInMP3Result = GetSoundFileInMP3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInUlaw", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInUlawRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string LicenseKey;
        
        public GetSoundFileInUlawRequest()
        {
        }
        
        public GetSoundFileInUlawRequest(string SoundFileID, string LicenseKey)
        {
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInUlawResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInUlawResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileInUlawResult;
        
        public GetSoundFileInUlawResponse()
        {
        }
        
        public GetSoundFileInUlawResponse(byte[] GetSoundFileInUlawResult)
        {
            this.GetSoundFileInUlawResult = GetSoundFileInUlawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListIDsByLicensekey", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListIDsByLicensekeyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string licensekey;
        
        public LM_GetListIDsByLicensekeyRequest()
        {
        }
        
        public LM_GetListIDsByLicensekeyRequest(string licensekey)
        {
            this.licensekey = licensekey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListIDsByLicensekeyResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListIDsByLicensekeyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PhoneNotifySoapService.LM_ListIDs[] LM_GetListIDsByLicensekeyResult;
        
        public LM_GetListIDsByLicensekeyResponse()
        {
        }
        
        public LM_GetListIDsByLicensekeyResponse(PhoneNotifySoapService.LM_ListIDs[] LM_GetListIDsByLicensekeyResult)
        {
            this.LM_GetListIDsByLicensekeyResult = LM_GetListIDsByLicensekeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListMembersByListID", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListMembersByListIDRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public int ListID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string Licensekey;
        
        public LM_GetListMembersByListIDRequest()
        {
        }
        
        public LM_GetListMembersByListIDRequest(int ListID, string Licensekey)
        {
            this.ListID = ListID;
            this.Licensekey = Licensekey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListMembersByListIDResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListMembersByListIDResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PhoneNotifySoapService.LM_ListMembers[] LM_GetListMembersByListIDResult;
        
        public LM_GetListMembersByListIDResponse()
        {
        }
        
        public LM_GetListMembersByListIDResponse(PhoneNotifySoapService.LM_ListMembers[] LM_GetListMembersByListIDResult)
        {
            this.LM_GetListMembersByListIDResult = LM_GetListMembersByListIDResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface PhoneNotifySoapChannel : PhoneNotifySoapService.PhoneNotifySoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PhoneNotifySoapClient : System.ServiceModel.ClientBase<PhoneNotifySoapService.PhoneNotifySoap>, PhoneNotifySoapService.PhoneNotifySoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PhoneNotifySoapClient(EndpointConfiguration endpointConfiguration) : 
                base(PhoneNotifySoapClient.GetBindingForEndpoint(endpointConfiguration), PhoneNotifySoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhoneNotifySoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PhoneNotifySoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhoneNotifySoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PhoneNotifySoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhoneNotifySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync()
        {
            return base.Channel.GetVersionAsync();
        }
        
        public System.Threading.Tasks.Task<string[]> ReturnSoundFileIDsAsync(string LicenseKey)
        {
            return base.Channel.ReturnSoundFileIDsAsync(LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveSoundFileAsync(string SoundFileID, string LicenseKey)
        {
            return base.Channel.RemoveSoundFileAsync(SoundFileID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> RenameSoundFileAsync(string SoundFileID, string NewSoundFileID, string LicenseKey)
        {
            return base.Channel.RenameSoundFileAsync(SoundFileID, NewSoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.UploadSoundFileResponse> PhoneNotifySoapService.PhoneNotifySoap.UploadSoundFileAsync(PhoneNotifySoapService.UploadSoundFileRequest request)
        {
            return base.Channel.UploadSoundFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.UploadSoundFileResponse> UploadSoundFileAsync(byte[] FileBinary, string SoundFileID, string LicenseKey)
        {
            PhoneNotifySoapService.UploadSoundFileRequest inValue = new PhoneNotifySoapService.UploadSoundFileRequest();
            inValue.FileBinary = FileBinary;
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).UploadSoundFileAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<double> GetSoundFileLengthAsync(string SoundFileID, string LicenseKey)
        {
            return base.Channel.GetSoundFileLengthAsync(SoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileResponse> PhoneNotifySoapService.PhoneNotifySoap.GetSoundFileAsync(PhoneNotifySoapService.GetSoundFileRequest request)
        {
            return base.Channel.GetSoundFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileResponse> GetSoundFileAsync(string SoundFileID, string LicenseKey)
        {
            PhoneNotifySoapService.GetSoundFileRequest inValue = new PhoneNotifySoapService.GetSoundFileRequest();
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).GetSoundFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInULAWResponse> PhoneNotifySoapService.PhoneNotifySoap.GetTTSInULAWAsync(PhoneNotifySoapService.GetTTSInULAWRequest request)
        {
            return base.Channel.GetTTSInULAWAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInULAWResponse> GetTTSInULAWAsync(string TextToSay, int VoiceID, byte TTSrate, byte TTSvolume, string LicenseKey)
        {
            PhoneNotifySoapService.GetTTSInULAWRequest inValue = new PhoneNotifySoapService.GetTTSInULAWRequest();
            inValue.TextToSay = TextToSay;
            inValue.VoiceID = VoiceID;
            inValue.TTSrate = TTSrate;
            inValue.TTSvolume = TTSvolume;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).GetTTSInULAWAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInMP3Response> PhoneNotifySoapService.PhoneNotifySoap.GetTTSInMP3Async(PhoneNotifySoapService.GetTTSInMP3Request request)
        {
            return base.Channel.GetTTSInMP3Async(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.GetTTSInMP3Response> GetTTSInMP3Async(string TextToSay, int VoiceID, int BitRate, byte TTSrate, byte TTSvolume, string LicenseKey)
        {
            PhoneNotifySoapService.GetTTSInMP3Request inValue = new PhoneNotifySoapService.GetTTSInMP3Request();
            inValue.TextToSay = TextToSay;
            inValue.VoiceID = VoiceID;
            inValue.BitRate = BitRate;
            inValue.TTSrate = TTSrate;
            inValue.TTSvolume = TTSvolume;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).GetTTSInMP3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInMP3Response> PhoneNotifySoapService.PhoneNotifySoap.GetSoundFileInMP3Async(PhoneNotifySoapService.GetSoundFileInMP3Request request)
        {
            return base.Channel.GetSoundFileInMP3Async(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInMP3Response> GetSoundFileInMP3Async(string SoundFileID, int BitRate, string LicenseKey)
        {
            PhoneNotifySoapService.GetSoundFileInMP3Request inValue = new PhoneNotifySoapService.GetSoundFileInMP3Request();
            inValue.SoundFileID = SoundFileID;
            inValue.BitRate = BitRate;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).GetSoundFileInMP3Async(inValue);
        }
        
        public System.Threading.Tasks.Task<string> GetSoundFileURLAsync(string SoundFileID, string LicenseKey)
        {
            return base.Channel.GetSoundFileURLAsync(SoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInUlawResponse> PhoneNotifySoapService.PhoneNotifySoap.GetSoundFileInUlawAsync(PhoneNotifySoapService.GetSoundFileInUlawRequest request)
        {
            return base.Channel.GetSoundFileInUlawAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.GetSoundFileInUlawResponse> GetSoundFileInUlawAsync(string SoundFileID, string LicenseKey)
        {
            PhoneNotifySoapService.GetSoundFileInUlawRequest inValue = new PhoneNotifySoapService.GetSoundFileInUlawRequest();
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).GetSoundFileInUlawAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bool> RecordSoundViaPhoneCallAsync(string PhoneNumberToDial, string SoundFileID, string LicenseKey)
        {
            return base.Channel.RecordSoundViaPhoneCallAsync(PhoneNumberToDial, SoundFileID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> GetQueueIDStatusAsync(long QueueID)
        {
            return base.Channel.GetQueueIDStatusAsync(QueueID);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> GetQueueIDStatusesByPhoneNumberAsync(string PhoneNumber, string LicenseKey)
        {
            return base.Channel.GetQueueIDStatusesByPhoneNumberAsync(PhoneNumber, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> GetQueueIDStatusWithAdvancedInfoAsync(long QueueID, string LicenseKey)
        {
            return base.Channel.GetQueueIDStatusWithAdvancedInfoAsync(QueueID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneEnglishBasicAsync(string PhoneNumberToDial, string TextToSay, string LicenseKey)
        {
            return base.Channel.NotifyPhoneEnglishBasicAsync(PhoneNumberToDial, TextToSay, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicWithTransferAsync(string PhoneNumberToDial, string TransferNumber, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey)
        {
            return base.Channel.NotifyPhoneBasicWithTransferAsync(PhoneNumberToDial, TransferNumber, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> GetMultipleQueueIdStatusAsync(string QueueIDs, string LicenseKey)
        {
            return base.Channel.GetMultipleQueueIdStatusAsync(QueueIDs, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicAsync(string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey)
        {
            return base.Channel.NotifyPhoneBasicAsync(PhoneNumberToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneBasicWithTryCountAsync(short TryCount, string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey)
        {
            return base.Channel.NotifyPhoneBasicWithTryCountAsync(TryCount, PhoneNumberToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn> NotifyPhoneAdvancedAsync(PhoneNotifySoapService.AdvancedNotifyRequest anr)
        {
            return base.Channel.NotifyPhoneAdvancedAsync(anr);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey)
        {
            return base.Channel.NotifyMultiplePhoneBasicAsync(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicWithCPMAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string LicenseKey)
        {
            return base.Channel.NotifyMultiplePhoneBasicWithCPMAsync(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, CallsPerMinute, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneBasicWithCPMandReferenceIDAsync(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string ReferenceID, string LicenseKey)
        {
            return base.Channel.NotifyMultiplePhoneBasicWithCPMandReferenceIDAsync(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, CallsPerMinute, ReferenceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.NotifyReturn[]> NotifyMultiplePhoneAdvancedAsync(PhoneNotifySoapService.AdvancedNotifyRequest[] MultipleANR)
        {
            return base.Channel.NotifyMultiplePhoneAdvancedAsync(MultipleANR);
        }
        
        public System.Threading.Tasks.Task CancelConferenceAsync(string ConferenceKey)
        {
            return base.Channel.CancelConferenceAsync(ConferenceKey);
        }
        
        public System.Threading.Tasks.Task<bool> CancelNotifyAsync(long QueueID, string LicenseKey)
        {
            return base.Channel.CancelNotifyAsync(QueueID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<int> CancelNotifyByReferenceIDAsync(string ReferenceID, string LicenseKey)
        {
            return base.Channel.CancelNotifyByReferenceIDAsync(ReferenceID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<string[]> ScriptListAsync(bool IncludeGlobalScripts, string LicenseKey)
        {
            return base.Channel.ScriptListAsync(IncludeGlobalScripts, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> ScriptSaveAsync(string ScriptName, string ScriptText, string LicenseKey)
        {
            return base.Channel.ScriptSaveAsync(ScriptName, ScriptText, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> ScriptDeleteAsync(string ScriptName, string LicenseKey)
        {
            return base.Channel.ScriptDeleteAsync(ScriptName, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<string> ScriptLoadAsync(string ScriptName, string LicenseKey)
        {
            return base.Channel.ScriptLoadAsync(ScriptName, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<string> LicenseKeyVariableLoadAsync(string VariableName, string LicenseKey)
        {
            return base.Channel.LicenseKeyVariableLoadAsync(VariableName, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> LicenseKeyVariableSaveAsync(string VariableName, string VariableValue, string LicenseKey)
        {
            return base.Channel.LicenseKeyVariableSaveAsync(VariableName, VariableValue, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListIDsByLicensekeyResponse> PhoneNotifySoapService.PhoneNotifySoap.LM_GetListIDsByLicensekeyAsync(PhoneNotifySoapService.LM_GetListIDsByLicensekeyRequest request)
        {
            return base.Channel.LM_GetListIDsByLicensekeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListIDsByLicensekeyResponse> LM_GetListIDsByLicensekeyAsync(string licensekey)
        {
            PhoneNotifySoapService.LM_GetListIDsByLicensekeyRequest inValue = new PhoneNotifySoapService.LM_GetListIDsByLicensekeyRequest();
            inValue.licensekey = licensekey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).LM_GetListIDsByLicensekeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListMembersByListIDResponse> PhoneNotifySoapService.PhoneNotifySoap.LM_GetListMembersByListIDAsync(PhoneNotifySoapService.LM_GetListMembersByListIDRequest request)
        {
            return base.Channel.LM_GetListMembersByListIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.LM_GetListMembersByListIDResponse> LM_GetListMembersByListIDAsync(int ListID, string Licensekey)
        {
            PhoneNotifySoapService.LM_GetListMembersByListIDRequest inValue = new PhoneNotifySoapService.LM_GetListMembersByListIDRequest();
            inValue.ListID = ListID;
            inValue.Licensekey = Licensekey;
            return ((PhoneNotifySoapService.PhoneNotifySoap)(this)).LM_GetListMembersByListIDAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.LM_DialReturn> LM_DialListAsync(int ListID, bool DialRecursiveLists, string CallerID, string CallerIDName, byte VoiceID, string TextToSay, string LicenseKey)
        {
            return base.Channel.LM_DialListAsync(ListID, DialRecursiveLists, CallerID, CallerIDName, VoiceID, TextToSay, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.LM_DialReturn> LM_DialListAdvancedAsync(PhoneNotifySoapService.LM_Functions lmFunctions)
        {
            return base.Channel.LM_DialListAdvancedAsync(lmFunctions);
        }
        
        public System.Threading.Tasks.Task<int> LM_AddNewListAsync(string ListName, int ParentListID, string LicenseKey)
        {
            return base.Channel.LM_AddNewListAsync(ListName, ParentListID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<int> LM_AddListMemberAsync(int ListID, string LicenseKey, string PhoneNumber, string ClientID, string FirstName, string LastName)
        {
            return base.Channel.LM_AddListMemberAsync(ListID, LicenseKey, PhoneNumber, ClientID, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task<bool> LM_DeleteListAsync(int ListID, string LicenseKey)
        {
            return base.Channel.LM_DeleteListAsync(ListID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> LM_DeleteListMemberAsync(int ListMemberID, string LicenseKey)
        {
            return base.Channel.LM_DeleteListMemberAsync(ListMemberID, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> LM_AlterListMemberAsync(int ListMemberID, string licensekey, string ClientID, string FirstName, string LastName, string PhoneNumber)
        {
            return base.Channel.LM_AlterListMemberAsync(ListMemberID, licensekey, ClientID, FirstName, LastName, PhoneNumber);
        }
        
        public System.Threading.Tasks.Task<bool> LM_AlterListIDAsync(int ListID, int ParentListID, string ListName, string Licensekey)
        {
            return base.Channel.LM_AlterListIDAsync(ListID, ParentListID, ListName, Licensekey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.Response[]> GetResponseCodesAsync()
        {
            return base.Channel.GetResponseCodesAsync();
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.AreaCode[]> GetAvailableAreaCodesAsync()
        {
            return base.Channel.GetAvailableAreaCodesAsync();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAvailableIncomingNumbersAsync(string AreaCodeFilter)
        {
            return base.Channel.GetAvailableIncomingNumbersAsync(AreaCodeFilter);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssignedNumbersAsync(string LicenseKey)
        {
            return base.Channel.GetAssignedNumbersAsync(LicenseKey);
        }
        
        public System.Threading.Tasks.Task<PhoneNotifySoapService.Voice[]> getVoicesAsync()
        {
            return base.Channel.getVoicesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AssignIncomingNumberAsync(string IncomingPhoneNumber, string LicenseKey)
        {
            return base.Channel.AssignIncomingNumberAsync(IncomingPhoneNumber, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<bool> SetIncomingCallScriptAsync(string PhoneNumber, string Script, string LicenseKey)
        {
            return base.Channel.SetIncomingCallScriptAsync(PhoneNumber, Script, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<string> GetIncomingCallScriptAsync(string PhoneNumber, string LicenseKey)
        {
            return base.Channel.GetIncomingCallScriptAsync(PhoneNumber, LicenseKey);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PhoneNotifySoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PhoneNotifySoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PhoneNotifySoap))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.cdyne.com/NotifyWS/PhoneNotify.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.PhoneNotifySoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.cdyne.com/NotifyWS/PhoneNotify.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            PhoneNotifySoap,
            
            PhoneNotifySoap12,
        }
    }
}
